스프링 MVC - 기본기능
    프로젝트 생성
        WAR가 배치에 적합, 기능이 더 구현되어 있다.

    로깅 간단힌 알아보기
        SLF4J는 인터페이스
        그걸 구현한 것중 하나가 Logback이다. (가장 대중적)

        @RestController는??
        기존의 @Controller는 그 클래스 안의 메서드들이 스트링을 반환 하면 뷰 이름으로 인식되어서 뷰를찾고 뷰가 렌더링 된다.
        @RestController는 (RestAPI의 그 Rest이다.) 문자를 반환하면 그 스트링이 반환이 바로 되버린다.
        그래서 http 메세지 바디에 데이터를 넣어버리는것

        운영서버에 print메서드 찍으면 안된다 로그가 무분별하게 남기때문에 로그를 사용하면 내가 원하는 수준까지 확인할 수 있다.
        원하는 수준이라는것은 로그 레벨별로 설정해서 출력결과 확인 가능

        개발 서버는 debug
        운영 서버는 info
        default는 info

        private final Logger log = LoggerFactory.getLogger(LogTestController.class);
        가 너무 길다면 클래스단에다가 @Slf4j를 넣어주면 된다.

        로그 레벨에 따라 개발 서버와 운영 서버 로그를 설정으로 조절할 수 있다.
        println은 다 콘솔에 남는다 하지만 log는 파일에도 남길 수 있다. 네트워크로 로그 전송도 가능

        성능최적화! print문보다 좋다. 실무에서는 꼭 로그사용할것

    요청 매핑
        요청이 왔을떄 어떤 컨트롤러가 호출이 되어야하는지 매핑하는것
        단순히 url 뿐만 아니라 여러가지 요소를 가지고 매핑한다. 어떤 요소???

        url은 배열로 제공되어서 여러개의 url을 넣어도 괜찮다.

        스프링에서는 url마지막에 / 가 들어온것도 같이 매핑을 해준다.

        메서드를 정의해주지 않으면 어떤 api가 들어와도 응답한다.

        api 오류가 나면 json style로 보내준다.

        최근 http api는 리소스 경로에 식별자를 넣는 스타일을 선호한다. ( {} 를사용 )

    요청 매핑 - API 예시
        api를 만들어보자 (데이터가 넘어가는 부분 생략하고 URL 매핑만)
        @RequestMapping을 클래스별 메서드별로 작성하고 조합하는것을 자주 활용한다. 사람이 보기에 편해서

    HTTP 요청 - 기본, 헤더 조회
        HTTP 요청에서 데이터는 어떻게 넘어가나
        HTTP 헤더 정보를 조회하는 방법을 익히자

        locale은 우선순위가 가장 높은걸로 우리는 당연히 한국어, localeResolver가 있어서 다른방식으로 확장도 가능 잘 안건드린다.
        MultiValueMap은 하나의 키에 여러가지 값을 받을 수 있다. 같은 헤더에 같은 값들이 들어올 수도 있다.
        CookieValue는 특정 쿠키를 조회

    HTTP 요청 파라미터 - 쿼리 파라미터, HTML Form
        쿼리파라미터, HTML Form에서 데이터를 어떻게 처리하는지 확인해보자

        GET 쿼리 파라미터 전송 방식이나 POST HTML Form전송 방식이든 둘다 형식이 같아서 구분없이 조회할 수 있다 이것을 간단히
        요청 파라미터 ( request parameter ) 조회라고 한다.

        ★스프링으로 요청파라미터 조회하는방법!

    HTTP 요청 파라미터 - @RequestParam
        컨트롤러에 받는 파라미터에 붙일수 있는 여러가지 기능들

    HTTP 요청 파라미터 - @ModelAttribute
        HelloData 객체를 생성, 요청파라미터의 이름으로 객체의 프로퍼티(set~,get~)를 찾고 setter를 호출해서 파라미터의 값을 입력(바인딩)한다.

        데이터를 집어넣는것을 바인딩이라고 한다.

    HTTP 요청 메시지 - 단순 텍스트
        HTTP 메시지 바디를 통해 직접 데이터가 넘어오는 경우에는 @RequestParam, @ModelAttribute 사용불가!
        어떻게 전송하고 읽을 수 있나 ???

    HTTP 요청 메시지 - JSON

